<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ctypes on Xiao&#39;s blog</title>
    <link>https://xiaozhangryy.github.io/tags/ctypes/</link>
    <description>Recent content in ctypes on Xiao&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 10 Apr 2020 15:36:05 +0800</lastBuildDate>
    
	<atom:link href="https://xiaozhangryy.github.io/tags/ctypes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python | Using ctypes to access C code from Python.</title>
      <link>https://xiaozhangryy.github.io/post/python_call_c_ctypes/</link>
      <pubDate>Fri, 10 Apr 2020 15:36:05 +0800</pubDate>
      
      <guid>https://xiaozhangryy.github.io/post/python_call_c_ctypes/</guid>
      <description>This blog introduce how to use ctypes to access C code from Python.
1 C code Here, we use the same C code as my previous blog:
#include &amp;lt;math.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;string.h&amp;gt; #define PI 3.1415926535 void mycfunc(double *array_d, int *array_i, double d, int i, char *array_c, double *output) { if (strcmp(array_c, &amp;quot;cos&amp;quot;) == 0) { output[0] = cos(array_d[0] + array_i[0] * PI); output[1] = cos(d + i * PI); } elif (strcmp(array_c, &amp;quot;sin&amp;quot;) == 0) { output[0] = sin(array_d[0] + array_i[0] * PI); output[1] = sin(d + i * PI); } } 2 Compile We can use Python to compile the C file into shared library.</description>
    </item>
    
  </channel>
</rss>